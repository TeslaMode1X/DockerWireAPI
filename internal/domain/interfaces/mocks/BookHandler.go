// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// BookHandler is an autogenerated mock type for the BookHandler type
type BookHandler struct {
	mock.Mock
}

// CreateBook provides a mock function with given fields: w, r
func (_m *BookHandler) CreateBook(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// DeleteBookById provides a mock function with given fields: w, r
func (_m *BookHandler) DeleteBookById(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetAllBooks provides a mock function with given fields: w, r
func (_m *BookHandler) GetAllBooks(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetBookById provides a mock function with given fields: w, r
func (_m *BookHandler) GetBookById(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// UpdateBookById provides a mock function with given fields: w, r
func (_m *BookHandler) UpdateBookById(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewBookHandler creates a new instance of BookHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBookHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *BookHandler {
	mock := &BookHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
