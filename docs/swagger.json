{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/book": {
            "get": {
                "description": "Retrieves a list of all books available in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "List of books",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BookModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new book and returns the created book ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BookModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created book ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{id}": {
            "get": {
                "description": "Retrieves a single book by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get book by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book details",
                        "schema": {
                            "$ref": "#/definitions/BookModel"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing book by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update a book by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated book data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BookModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated book ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format or input",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing book by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Delete a book by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book successfully deleted!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/cart/add": {
            "get": {
                "description": "Adds a book to the current user's cart with an optional quantity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Add item to cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Quantity of the book to add (default: 1)",
                        "name": "quantity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "303": {
                        "description": "Redirects to main page with success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid book ID or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/cart/items": {
            "get": {
                "description": "Retrieves the list of items in the current user's cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Get user's cart items",
                "responses": {
                    "200": {
                        "description": "List of cart items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderItemModel"
                            }
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/cart/remove": {
            "post": {
                "description": "Removes a book from the current user's cart by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Remove item from cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "303": {
                        "description": "Redirects to main page with success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid book ID or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "401": {
                        "description": "Already logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/order": {
            "get": {
                "description": "Retrieves the current user's order based on the user ID in the context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get user's order",
                "responses": {
                    "200": {
                        "description": "User's order details",
                        "schema": {
                            "$ref": "#/definitions/OrderModel"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new order for the current user based on the user ID in the context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create a new user order",
                "responses": {
                    "201": {
                        "description": "User Order created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/order/order": {
            "post": {
                "description": "Adds one or more items to the current user's order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Add items to user's order",
                "parameters": [
                    {
                        "description": "Order items to add",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrderItemRequestModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order Items Added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/order/{orderId}": {
            "get": {
                "description": "Retrieves a specific order by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/OrderModel"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing order by its ID and the user ID in the context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update user's order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order paid successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid order ID",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "401": {
                        "description": "User not logged in",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Creates a new user account and returns the created user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegistrationModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or user already exists",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "description": "Retrieves a user's details by their unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ResponseErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BookModel": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "CreateOrderItemRequestModel": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItemModel"
                    }
                }
            }
        },
        "LoginModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "OrderItemModel": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "OrderModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "RegistrationModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ResponseErrorModel": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "UserModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}